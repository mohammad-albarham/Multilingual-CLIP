(tf) lenovo@lenovo-ThinkStation-P920:~/Desktop/arabic_clip/Multilingual-CLIP/multilingual_clip/TeacherLearning$ python3 ConvertTrainingModelToPT.py
2023-07-25 16:32:08.165608: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 AVX512F FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-07-25 16:32:08.977944: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
2023-07-25 16:32:12.095093: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1635] Created device /job:localhost/replica:0/task:0/device:GPU:0 with 30673 MB memory:  -> device: 0, name: Quadro GV100, pci bus id: 0000:18:00.0, compute capability: 7.0
Some weights of the PyTorch model were not used when initializing the TF 2.0 model TFBertModel: ['cls.seq_relationship.bias', 'cls.predictions.transform.dense.bias', 'cls.seq_relationship.weight', 'cls.predictions.transform.dense.weight', 'cls.predictions.decoder.bias', 'cls.predictions.transform.LayerNorm.bias', 'bert.embeddings.position_ids', 'cls.predictions.decoder.weight', 'cls.predictions.transform.LayerNorm.weight', 'cls.predictions.bias']
- This IS expected if you are initializing TFBertModel from a PyTorch model trained on another task or with another architecture (e.g. initializing a TFBertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing TFBertModel from a PyTorch model that you expect to be exactly identical (e.g. initializing a TFBertForSequenceClassification model from a BertForSequenceClassification model).
All the weights of TFBertModel were initialized from the PyTorch model.
If your task is similar to the task the model of the checkpoint was trained on, you can already use TFBertModel for predictions without further training.
Traceback (most recent call last):
  File "ConvertTrainingModelToPT.py", line 44, in <module>
    splitAndStoreTFModelToDisk(transformerBase, weightsPath, visualDimensionSpace, modelSaveBase)
  File "ConvertTrainingModelToPT.py", line 26, in splitAndStoreTFModelToDisk
    model.set_weights(weightsPath)
  File "/home/lenovo/miniconda3/envs/tf/lib/python3.8/site-packages/keras/engine/base_layer.py", line 1802, in set_weights
    raise ValueError(
ValueError: You called `set_weights(weights)` on layer "sentence_model_with_linear_transformation" with a weight list of length 130, but the layer was expecting 199 weights. Provided weights: /home/lenovo/Desktop/arabic_clip/Multilingual-CLIP...
